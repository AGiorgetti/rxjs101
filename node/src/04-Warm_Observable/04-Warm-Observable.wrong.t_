import { Observable, ConnectableObservable, Subscriber, Subject } from "rxjs";
import { publish, tap } from "rxjs/operators";

// https://github.com/Reactive-Extensions/RxJS/blob/master/doc/gettingstarted/creating.md#cold-vs-hot-observables

// Warm observables are a special kinds of observables:
// they are cold because they start producing values only after a subscription is active.
// they are hot because the data is shared among all the subscribers.

const o = new Subject<number>();
const o2 = o.pipe(
    tap(data => console.log(data))
);

o.next(Date.now());

// o.connect(); // nothing will be displayed if we call connect() and activate the observable here

o2.subscribe(v => console.log("1st subscriber: " + v));
o2.subscribe(v => console.log("2nd subscriber: " + v));

o.next(Date.now());

o2.subscribe(v => console.log("3rd subscriber: " + v));

o.next(Date.now());

// -------------

let producer: Subscriber<number>;
const o3 = new Observable<number>(subscriber => producer = subscriber).pipe(
    publish()
) as ConnectableObservable<number>; // there's an issue about type inference not working: https://github.com/ReactiveX/rxjs/issues/2972

o3.connect(); // nothing will be displayed if we call connect() and activate the observable here

producer.next(Date.now());

o3.subscribe(v => console.log("1st subscriber: " + v));
o3.subscribe(v => console.log("2nd subscriber: " + v));

producer.next(Date.now());